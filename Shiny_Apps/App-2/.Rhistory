Nights.high = sum(activity_level=="high"),
Nights.modhigh = sum(activity_level=="medium/high"),
Nights.mod = sum(activity_level=="medium"),
Nights.lowmod = sum(activity_level=="low/medium"),
Nights.low = sum(activity_level=="low"))
#rename columns
names(actdata)[names(actdata)=="location_name"] <- "Location"
names(actdata)[names(actdata)=="species"] <- "Species/Species Group"
names(actdata)[names(actdata)=="Nights.high"] <- "Nights of High Activity"
names(actdata)[names(actdata)=="Nights.modhigh"] <- "Nights of Moderate/ High Activity"
names(actdata)[names(actdata)=="Nights.mod"] <- "Nights of Moderate Activity"
names(actdata)[names(actdata)=="Nights.lowmod"] <- "Nights of Low/ Moderate Activity"
names(actdata)[names(actdata)=="Nights.low"] <- "Nights of Low Activity"
library(knitr)
results='asis'#important to run this as it ensures the raw table output isn't processed further by knitr
datatable2<-actdata
emphasize.italics.cols(2) #second column needs to be in italics i.e. species names
panderOptions("table.split.table", Inf) #don't split table
pander(datatable2, style = 'rmarkdown', keep.line.breaks=TRUE)
library(plyr)
library(rcompanion)
con<-subset(wp, surv>=2) #subset dataset to only include records with more than one night of surveying
confint<-groupwiseMedian(percentile ~ sref + species, #code to get confidence intervals
data       = con,
conf       = 0.95,
R          = 1000,
wilcox =   TRUE,
bca        = FALSE,
digits     = 3)
confint <- transform(confint, Wilcox.lower = ifelse(Wilcox.lower == "NaN", Median, Wilcox.lower))
confint <- transform(confint, Wilcox.upper = ifelse(Wilcox.upper == "NaN", Median, Wilcox.upper))
mm<-merge(con, confint) #merge with subsetted dataset to put columns with the confidence intervals on the end
mm$confint = paste(mm$Wilcox.lower, mm$Wilcox.upper, sep=" - ") #add a new column with CIs merged
non<-subset(wp,surv=="1") #subset dataset to only include records with one night of surveying
if(nrow(non)>0) {
non$n <- 0 #add empty columns to enable merger
non$Median <- 0
non$Wilcox.upper <- 0
non$Wilcox.lower <- 0
non$confint <- 0}
please<-rbind(mm, non) #join the two datasets back together
library(plyr) #ddply as normal
mdata2 <- ddply(please, c("location_name", "species"), summarise,
Median.percentile = ceiling(median(percentile)),#finds median percentile
conf = max(confint),
Highest.perc = max(percentile), #returns max percentiles
Number.nights = length(date), #returns how many nights of data in the dataset
Reference.range.size = mean(reference_range_size)) #returns reference range size - i used mean as it should be the
#same in each row because same species same location
names(mdata2)[names(mdata2)=="location_name"] <- "Location"
names(mdata2)[names(mdata2)=="species"] <- "Species/Species Group"
names(mdata2)[names(mdata2)=="Median.percentile"] <- "Median Percentile"
names(mdata2)[names(mdata2)=="conf"] <- "95% CIs"
names(mdata2)[names(mdata2)=="Highest.perc"] <- "Max Percentile"
names(mdata2)[names(mdata2)=="Number.nights"] <- "Nights Recorded"
names(mdata2)[names(mdata2)=="Reference.range.size"] <- "Reference Range"
library(knitr)
library(pander)
results='asis' #important to run this as it ensures the raw table output isn't processed further by knitr
medtable2<-mdata2
emphasize.italics.cols(2)
panderOptions("table.split.table", Inf)
panderOptions("table.split.cells", Inf)
pander(medtable2, style = 'multiline', keep.line.breaks=TRUE,justify = c('right', 'left', 'centre', 'centre', 'centre', 'centre', 'centre'))
#boxplot if 1 location
if(loc=="1") {graphbox<-ggplot(ys, aes(x=species, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(df, mapping = aes(fill=species))+
xlab("Species")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90, face="italic", size=16),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")
graphbox}
#endcode for boxplot
#boxplot if 2-5 location but only one species
if(loc>2 & loc<5 & spn=="1") {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")
graphboxb}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_grid(. ~ species) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16, angle=90, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_grid(. ~ species) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16, angle=90, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_wrap(. ~ species) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16, angle=90, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_wrap(~ species) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
#boxplot if more than 5 location and one species
if(loc>=5 & spn=="1") {graphboxc<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_wrap( ~ species, ncol=3) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxbc}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16, angle=90, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_wrap(~ species, ncol=3) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
#boxplot if 2-5 location and more one species
if(loc>2 & loc<5 & spn>1) {graphboxb<-ggplot(ys, aes(x=location_name, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(ys, mapping = aes(fill=location_name))+
xlab("Location name")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_manual(values=greys)+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(size=16, angle=90, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18),
legend.position="none")+
facet_wrap( ~ species, ncol=3) +
theme(strip.text.x = element_text(size=16, face="italic"))
graphboxb}
#endcode for boxplot
## date ~ percentile graph if 2-5 locations + >1 species
#less than 21 days
if((difftime(max(ys$date),min(ys$date), units='days')<=21) & loc>1 & loc<5 & spn>1) {graphE<-ggplot(ys, aes(x= date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels = "%d %b %Y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_grid(species ~ location_name) +
theme(strip.text.y = element_text(size=16, face="italic"),
strip.text.x = element_text(size=16))
graphE}
#end code for date graph
## date ~ percentile graph if 2-5 locations + >1 species
#if time diff between 50 and 300 days
if((difftime(max(ys$date),min(ys$date), units='days')>50) & (difftime(max(ys$date),min(ys$date), units='days')<300) & loc>1 & loc<5 & spn>1) {graphk<-ggplot(ys, aes(x= ys$date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "3 weeks", date_labels = "%d %b %y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_grid(species ~ location_name) +
theme(strip.text.y = element_text(size=16, face="italic"),
strip.text.x = element_text(size=16))
graphk}
#end code for date graph
## date ~ percentile graph if 2-5 locations + >1 species
#if time diff between 50 and 300 days
if((difftime(max(ys$date),min(ys$date), units='days')>50) & (difftime(max(ys$date),min(ys$date), units='days')<300) & loc>1 & loc<5 & spn>1) {graphk<-ggplot(ys, aes(x= ys$date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "3 weeks", date_labels = "%d %b %y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_wrap(species ~ location_name) +
theme(strip.text.y = element_text(size=16, face="italic"),
strip.text.x = element_text(size=16))
graphk}
#end code for date graph
## date ~ percentile graph if 2-5 locations + >1 species
#if time diff between 50 and 300 days
if((difftime(max(ys$date),min(ys$date), units='days')>50) & (difftime(max(ys$date),min(ys$date), units='days')<300) & loc>1 & loc<5 & spn>1) {graphk<-ggplot(ys, aes(x= ys$date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "3 weeks", date_labels = "%d %b %y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_wrap_paginate(species ~ location_name, ncol=2, nrow=4, scales="fixed", page=1)) +
## date ~ percentile graph if 2-5 locations + >1 species
#if time diff between 50 and 300 days
if((difftime(max(ys$date),min(ys$date), units='days')>50) & (difftime(max(ys$date),min(ys$date), units='days')<300) & loc>1 & loc<5 & spn>1) {graphk<-ggplot(ys, aes(x= ys$date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "3 weeks", date_labels = "%d %b %y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_wrap_paginate(species ~ location_name, ncol=2, nrow=4, scales="fixed", page=1) +
theme(strip.text.y = element_text(size=16, face="italic"),
strip.text.x = element_text(size=16))
graphk}
#end code for date graph
## date ~ percentile graph if 2-5 locations + >1 species
#if time diff between 50 and 300 days
if((difftime(max(ys$date),min(ys$date), units='days')>50) & (difftime(max(ys$date),min(ys$date), units='days')<300) & loc>1 & loc<5 & spn>1) {
for (i in seq_len(n_pages)) {
print(ggplot(ys, aes(x= ys$date, y= percentile))+
geom_point(ys, size=3, shape=1,
mapping = aes(x=ys$date, y= percentile, color=activity_level))+
xlab("Night")+ #set x-axis
ylab("Bat Activity Level (Percentile)")+
scale_colour_manual(values=cbbPalette, name="Activity\nLevel",
breaks=c("High","Moderate/High","Moderate",
"Low/Moderate","Low"))+
scale_y_continuous(breaks=seq(0,100,20), limits=c(0,100)) +
scale_x_date(name = "Date", date_breaks = "3 weeks", date_labels = "%d %b %y")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90,size=16, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=18)) +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
facet_wrap_paginate(species ~ location_name, ncol=2, nrow=4, scales="fixed", page=i) +
theme(strip.text.y = element_text(size=16, face="italic"),
strip.text.x = element_text(size=16)))
}
}
#end code for date graph
