}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes((y=n+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.9)) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes((y=n+5), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.9)) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.9)) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.7)) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.7), size=8) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.7), size=4) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.7), size=6) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.8), size=6) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
count(new$Detector.ID, new$Month)
count(Detector.ID, Month, data = new)
count(new, Detector.ID, Month)
count(new, Detector.ID, Month, n)
new <- Night_month %>%
filter(Spp == "Leisler's")
new
count(new, Detector.ID, Month)
new
count(new, "Detector.I-Month")
count(new, "Detector.ID-Month")
count(new, "Detector.ID", "Month")
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=Detector.ID)) +
geom_boxplot(aes(fill=Detector.ID)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <= 5)ylim(0,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(0,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(0,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(0,1000)} +
geom_text(aes(y=(max(n)+1), x=Month, label=Detector.ID, group=Detector.ID), position=position_dodge(0.8), size=6) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
guides(fill=guide_legend(title="Detector ID")) +
theme(legend.text=element_text(size=18)) +
theme(legend.title=element_text(size=20)))
}
new <- Night_month %>%
filter(Spp == "Myotis spp.")
new2 <- count(new, "Detector.ID", "Month")
new2
new2 <- count(new, Detector.ID, Month)
new2
new2 <- nrow(new, Detector.ID, Month)
library(dplry)
library(dplyr)
new2 <- count(new, c(Detector.ID, Month))
new2 <- count(new, c("Detector.ID", "Month"))
new3 <- aggregate(Detector.ID~Month, new, length)
View(new3)
new3 <- aggregate(Detector.ID + Month, data = new, FUN = length)
new3 <- aggregate(Detector.ID ~ Month, data = new, FUN = length)
new2 <- new %>% count(Detector.ID, Month)
new2
View(new)
Night_month <- All_data %>%
group_by(Spp, Night, Month, Detector.ID) %>%
count()
View(Night_month)
View(new2)
View(new)
new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n))
new %>% group_by(Detector.ID, Month) %>% summarise(Median=median(n)))
new %>% group_by(Detector.ID, Month) %>% summarise(Median=median(n))
is new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n)) ==
isTRUE new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n)) =
isTRUE(new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n))) =
(new %>% group_by(Detector.ID, Month) %>% summarise(Median=median(n)))
(new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n))) =
(new %>% group_by(Detector.ID, Month) %>% summarise(Median=median(n)))
new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n))) ==
new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n))) ==
new %>% group_by(Detector.ID, Month) %>% summarise(Mean=mean(n)) ==
new %>% group_by(Detector.ID, Month) %>% summarise(Median=median(n))
# Create Useful Variables
# `Night` date at dusk
# `Month` month of observation `Jan, Feb, Mar....`
# `JustTime` time hh:mm of bat observation (12 hours added so plots correctly as `Night` i.e. dusk to dawn)
# `bat_time` time in seconds bat present see <https://rbats-blog.updog.co/2018/06/19/a-bat-time-metric/>
# if there is no information about the calls of the bats do this:
if ("Calls" %in% colnames(B_data) == FALSE)
{
B_data2 <- B_data %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
mutate(JustTime = DateTime + lubridate::hours(12)) %>%
mutate(JustTime = hms::as.hms(stringr::str_sub(as.character(JustTime), start = 12, end = 19))) %>%
#mutate(Bat_time = (Calls * (Length + Distance)) / 1000) %>%
#Remove NA observations
filter(!is.na(Species)) %>%
select(Night, JustTime, DateTime, Species, Month, Latitude, Longitude, Detector.ID, SppDets)
}
# if call info is provided, calculate 'Bat_time'
if ("Calls" %in% colnames(B_data) == TRUE)
{
B_data2 <- B_data %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
mutate(JustTime = DateTime + lubridate::hours(12)) %>%
mutate(JustTime = hms::as.hms(stringr::str_sub(as.character(JustTime), start = 12, end = 19))) %>%
mutate(Bat_time = (Calls * (Length + Distance)) / 1000) %>%
#Remove NA observations
filter(!is.na(Species)) %>%
select(Night, JustTime, DateTime, Species, Bat_time, Month, Latitude, Longitude, Detector.ID, SppDets)
}
# Change the format of the date from Y-m-d to d-m-Y:
# B_data2$Night2 <- as.Date(as.character(B_data2$Night, tz = "Europe/London", "%d/%m/%Y"), "%Y-%m-%d")
#
# B_data2$Night2 <- format(as.Date(B_data2$Night, format = "%Y-%m-%d"), format = "%d/%m/%Y")
#
# B_data2$Night3 <- as.Date(B_data2$Night2, format = "%d/%m/%Y")
#
# glimpse(B_data2)
#
# # B_data2$Night2 <- format(B_data2$Night, format=c("%d-%m-%Y"))
# # B_data2$Night2 <- as.Date(B_data2$Night, format=c("%d-%m-%Y"))
nightlist <- seq.Date(from=min(B_data2$Night),
length.out = num_nights +1,
by='days')
setdata <- getSunlightTimes(date = nightlist,
lat = median(B_data2$Latitude, na.rm = T),
lon = median(B_data2$Longitude, na.rm = T),
tz = "Europe/London")
View(setdata)
setdata <- setdata %>%
select(date, sunset) %>%
mutate(date = lubridate::as_date(date))
View(setdata)
risedata <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date)) %>%
mutate(date = date - lubridate::days(1))
View(risedata)
risedata <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date))
View(risedata)
# Get suntimes for date vector and Location (Latitude and Longitude)
setdata <- getSunlightTimes(date = nightlist,
lat = median(B_data2$Latitude, na.rm = T),
lon = median(B_data2$Longitude, na.rm = T),
tz = "Europe/London")
# Duplicate data.frame to make sunrise data
risedata <- setdata
View(risedata)
# Select  sunset date and time
setdata2 <- setdata %>%
select(date, sunset) %>%
mutate(date = lubridate::as_date(date))
View(setdata2)
risedata2 <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date))
View(risedata2)
risedata2 <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date)) %>%
mutate(date = date - lubridate::days(1))
View(risedata2)
# Combine sunset and risedata by
sun_data <- dplyr::full_join(setdata2, risedata2, by="date")
View(sun_data)
# # for testing purposes - load in test data
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/EweHill.csv")
#glimpse(B_data)
# # for testing purposes - load in test data
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/GlenApp.csv")
#glimpse(B_data)
