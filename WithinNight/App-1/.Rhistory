shiny::runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#Libraries used
library(tidyverse) # Enables a consistent approach to data science
library(dplyr)
library(suncalc) # Suntimes
library(knitr)
library(lubridate)
# for testing purposes - load in data from Steve
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#Libraries used
library(tidyverse) # Enables a consistent approach to data science
library(dplyr)
library(suncalc) # Suntimes
library(knitr)
library(lubridate)
# #Function BatExplorer_csv
# BatExplorer_csv <- function(pathfile) {
#
#   df <- readr::read_csv(pathfile, col_names= T)
#
#   df <- df %>%
#     select(Recording,
#            Timestamp,
#            `Species Text`,
#            `Calls [#]`,
#            `Mean Call Lenght [ms]`,
#            `Mean Call Distance [ms]`,
#            `Latitude [WGS84]`,
#            `Longitude [WGS84]`
#            )
# }
#
#Function BatExplorer_csv
BatExplorer_csv <- function(pathfile) {
df <- readr::read_csv(pathfile, col_names= T)
df <- df %>%
select(Recording,
Timestamp,
`Species Text`,
`Calls [#]`,
`Mean Call Lenght [ms]`,
`Mean Call Distance [ms]`,
`Latitude [WGS84]`,
`Longitude [WGS84]`
)
}
# for testing purposes - load in data from Steve
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
Data2 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy02.csv")
Data3 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy03.csv")
B_data <- rbind(Data1, Data2, Data3)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
B_data$Scientific <-  B_data$`Species Text`
#Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
View(B_data)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
B_data$Scientific <-  B_data$`Species Text`
#Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
View(B_data)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
B_data$Scientific <-  B_data$`Species Text`
#Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
View(B_data)
library(dplyr)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
B_data$Scientific <-  B_data$`Species Text`
#Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
View(B_data)
B_data <- B_data %>%
select(DateTime, Calls, Length, Distance, Latitude, Longitude, Scientific)
View(B_data)
write.csv(B_data, "//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/test.csv")
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
View(B_data)
str(B_data)
glimpse(B_data)
# Create Useful Variables
# `Night` date at dusk
# `Month` month of observation `Jan, Feb, Mar....`
# `JustTime` time hh:mm of bat observation (12 hours added so plots correctly as `Night` i.e. dusk to dawn)
# `bat_time` time in seconds bat present see <https://rbats-blog.updog.co/2018/06/19/a-bat-time-metric/>
B_data2 <- B_data %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
mutate(JustTime = DateTime + lubridate::hours(12)) %>%
mutate(JustTime = hms::as.hms(stringr::str_sub(as.character(JustTime), start = 12, end = 19))) %>%
mutate(Bat_time = (Calls * (Length + Distance)) / 1000) %>%
#Remove NA observations
filter(!is.na(Scientific)) %>%
# Select just columns needed in nice order
select(Night, JustTime, DateTime, Scientific, Bat_time, Month, Latitude, Longitude)
View(B_data2)
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/App-1')
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/test.csv")
# Create Useful Variables
# `Night` date at dusk
# `Month` month of observation `Jan, Feb, Mar....`
# `JustTime` time hh:mm of bat observation (12 hours added so plots correctly as `Night` i.e. dusk to dawn)
# `bat_time` time in seconds bat present see <https://rbats-blog.updog.co/2018/06/19/a-bat-time-metric/>
B_data2 <- B_data %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
mutate(JustTime = DateTime + lubridate::hours(12)) %>%
mutate(JustTime = hms::as.hms(stringr::str_sub(as.character(JustTime), start = 12, end = 19))) %>%
mutate(Bat_time = (Calls * (Length + Distance)) / 1000) %>%
#Remove NA observations
filter(!is.na(Scientific)) %>%
# Select just columns needed in nice order
select(Night, JustTime, DateTime, Scientific, Bat_time, Month, Latitude, Longitude)
glimpse(B_data)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
#
#
# B_data$Scientific <-  B_data$`Species Text`
#
# #Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
View(B_data)
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
BatExplorer_csv <- function(pathfile) {
df <- readr::read_csv(pathfile, col_names= T)
df <- df %>%
select(Recording,
Timestamp,
`Species Text`,
`Calls [#]`,
`Mean Call Lenght [ms]`,
`Mean Call Distance [ms]`,
`Latitude [WGS84]`,
`Longitude [WGS84]`
)
}
# # for testing purposes - load in data from Steve
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
Data2 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy02.csv")
Data3 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy03.csv")
B_data <- rbind(Data1, Data2, Data3)
# #Function BatExplorer_csv
BatExplorer_csv <- function(pathfile) {
df <- readr::read_csv(pathfile, col_names= T)
df <- df %>%
select(Recording,
Timestamp,
`Species Text`,
`Calls [#]`,
`Mean Call Lenght [ms]`,
`Mean Call Distance [ms]`,
`Latitude [WGS84]`,
`Longitude [WGS84]`
)
}
# # for testing purposes - load in data from Steve
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
Data2 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy02.csv")
Data3 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy03.csv")
B_data <- rbind(Data1, Data2, Data3)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#Libraries used
library(tidyverse) # Enables a consistent approach to data science
library(dplyr)
library(suncalc) # Suntimes
library(knitr)
library(lubridate)
# #Function BatExplorer_csv
BatExplorer_csv <- function(pathfile) {
df <- readr::read_csv(pathfile, col_names= T)
df <- df %>%
select(Recording,
Timestamp,
`Species Text`,
`Calls [#]`,
`Mean Call Lenght [ms]`,
`Mean Call Distance [ms]`,
`Latitude [WGS84]`,
`Longitude [WGS84]`
)
}
# # for testing purposes - load in data from Steve
Data1 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy01.csv")
Data2 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy02.csv")
Data3 <- BatExplorer_csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/Tavy03.csv")
B_data <- rbind(Data1, Data2, Data3)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
#
#
# B_data$Scientific <-  B_data$`Species Text`
#
# #Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
library(dplyr)
# Standardize Variables - make names consistent for further manipulation; can do the same for other bat sound analysis software e.g. Kaleidoscope. Make time zone local e.g `"Europe/London"`; adjusts for daylight saving automatically.
#
#
# B_data$Scientific <-  B_data$`Species Text`
#
# #Make Time Zone Local
B_data$DateTime <- lubridate::dmy_hms(B_data$Timestamp, tz = "Europe/London")
B_data$Calls <- B_data$`Calls [#]`
B_data$Length <- B_data$`Mean Call Lenght [ms]`
B_data$Distance <- B_data$`Mean Call Distance [ms]`
B_data$Latitude <- B_data$`Latitude [WGS84]`
B_data$Longitude <- B_data$`Longitude [WGS84]`
# Change `spec.` to `spp.`
B_data$Scientific <- stringr::str_replace(B_data$Scientific, "spec.", "spp." )
