"Nyctalus spp.",
"Pipistrellus nathusii",
"Pipistrellus pipistrellus",
"Pipistrellus pygmaeus",
"Pipistrellus spp.",
"Plecotus auritus",
"Plecotus austriacus",
"Rhinolophus ferrumequinum",
"Rhinolophus hipposideros")
Spp <- c("Barbastelle",
"Serotine",
"Alcathoe",
"Bechstein's",
"Brandt's",
"Daubenton's",
"Whiskered",
"Natterer's",
"Myotis spp.",
"Leisler's",
"Noctule",
"Nyctalus spp.",
"Nathusius'",
"Common pipistrelle",
"Soprano pipistrelle",
"Pipistrelle spp.",
"Brown long-eared",
"Grey long-eared",
"Greater horseshoe",
"Lesser horseshoe")
lower <- c(25, 20, 30, 30, 30, 50, 30, 35, 30, 8, 5, 5, 18, 22, 22, 18, 40, 40, 35, 35)
upper <- c(60, 25, 35, 33, 35, 70, 35, 55, 70, 18, 9, 18, 28, 32, 28, 32, 60, 60, 48, 50)
russ <- tibble(Species, Spp, lower, upper)
#Join with Jon Russ data with bat observation data All_data
All_data <- dplyr::left_join(All_data, russ, by = "Species")
# create lists to be used for tables and graphs later:
# list of all of the unique locations in the dataset
Dets <- c(unique(All_data$Detector.ID))
# list of all of the different species in the dataset
Species_list <- unique(All_data$Species)
Spp_list <- unique(All_data$Spp)
# list of all of the unique species-location combinations
SpDet <- c(unique(All_data$SppDets))
# dataframe of survey days
Surv.days <- as.data.frame(unique(All_data$Night)) #all unique survey nights
Surv.days.N <- length(Surv.days$`unique(All_data$Night)`) #count of survey nights
Surv.days.M <- Surv.days %>%
mutate(Month = lubridate::month((unique(All_data$Night)), label = T)) %>%
count(Month) #count of survey days per month
colourCount <- length(unique(All_data$Spp))
getPalette <- colorRampPalette(brewer.pal(9, "RdBu"))
All_data$Spp <- factor(All_data$Spp,levels=c("Pipistrelle spp.", "Common pipistrelle", "Soprano pipistrelle","Nathusius'", "Nyctalus spp.","Noctule", "Leisler's","Serotine", "Brown long-eared", "Grey long-eared", "Myotis spp.","Alcathoe", "Bechstein's",  "Brandt's", "Daubenton's","Whiskered", "Natterer's", "Barbastelle", "Greater horseshoe", "Lesser horseshoe"))
Table <- All_data %>%
group_by(Spp, Detector.ID, post_set_hr_int) %>%
count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- melt(Table)
Table3 <- Table2 %>%
rename(ss_hr = variable, Passes = value) %>%
arrange(Spp, Detector.ID, ss_hr) %>%
group_by(Spp, Detector.ID) %>%
mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~Detector.ID) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
Table <- All_data %>%
group_by(Spp, Detector.ID, post_set_hr_int) %>%
count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- melt(Table)
Table3 <- Table2 %>%
rename(ss_hr = variable, Passes = value) %>%
arrange(Spp, Detector.ID, ss_hr) %>%
group_by(Spp, Detector.ID) %>%
mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, hjust=1, vjust=0,
colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~Detector.ID) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
Table <- All_data %>%
group_by(Spp, Detector.ID, post_set_hr_int) %>%
count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- melt(Table)
Table3 <- Table2 %>%
rename(ss_hr = variable, Passes = value) %>%
arrange(Spp, Detector.ID, ss_hr) %>%
group_by(Spp, Detector.ID) %>%
mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, hjust=1, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~Detector.ID) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
Table <- All_data %>%
group_by(Spp, Detector.ID, post_set_hr_int) %>%
count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- melt(Table)
Table3 <- Table2 %>%
rename(ss_hr = variable, Passes = value) %>%
arrange(Spp, Detector.ID, ss_hr) %>%
group_by(Spp, Detector.ID) %>%
mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, hjust=0, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~Detector.ID) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
Table <- All_data %>%
group_by(Spp, Detector.ID, post_set_hr_int) %>%
count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- melt(Table)
Table3 <- Table2 %>%
rename(ss_hr = variable, Passes = value) %>%
arrange(Spp, Detector.ID, ss_hr) %>%
group_by(Spp, Detector.ID) %>%
mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~Detector.ID) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
# create a list of all of the different species
spp_list <- unique(All_data$Spp)
xLab <- "\nTime after sunset (mins)"
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
labs(x = xLab) +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=FALSE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
# create a list of all of the different species
spp_list <- unique(All_data$Spp)
xLab <- "\nTime after sunset (mins)"
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(All_data, aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
labs(x = xLab) +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=FALSE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
# create a list of all of the different species
spp_list <- unique(All_data$Spp)
xLab <- "\nTime after sunset (mins)"
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=All_data$Spp, yend=All_data$Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
labs(x = xLab) +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=FALSE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
All_data$Spp
if ((is.element("15-Jun", sun_data$Day) == TRUE) || (is.element("30-Jul", sun_data$Day) == TRUE)) {
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(All_data %>%
filter(Day >= "2019-06-15" & Day <= "2019-07-30") %>% #NEEDS CHANGING EACH YEAR!
ggplot(aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
xlab("\nTime after sunset (mins)") +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=FALSE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
}
if ((is.element("15-Jun", sun_data$Day) == TRUE) || (is.element("30-Jul", sun_data$Day) == TRUE)) {
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(All_data %>%
filter(Day >= "2019-06-15" & Day <= "2019-07-30") %>% #NEEDS CHANGING EACH YEAR!
ggplot(aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
xlab("\nTime after sunset (mins)") +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=FALSE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
}
if ((is.element("15-Jun", sun_data$Day) == TRUE) || (is.element("30-Jul", sun_data$Day) == TRUE)) {
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(All_data %>%
filter(Day >= "2019-06-15" & Day <= "2019-07-30") %>% #NEEDS CHANGING EACH YEAR!
ggplot(aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
xlab("\nTime after sunset (mins)") +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=TRUE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
}
# create a list of all of the different species
spp_list <- unique(All_data$Spp)
xLab <- "\nTime after sunset (mins)"
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=All_data$Spp, yend=All_data$Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
labs(x = xLab) +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=TRUE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
# create a list of all of the different species
spp_list <- unique(All_data$Spp)
xLab <- "\nTime after sunset (mins)"
for (i in seq_len(length(unique(All_data$Detector.ID)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
labs(x = xLab) +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=TRUE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold.italic")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~Detector.ID, ncol=1, nrow=1, page=i))
}
