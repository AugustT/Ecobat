#Remove NA observations
filter(!is.na(Species)) %>%
select(Night, JustTime, DateTime, Species, Bat_time, Month, Latitude, Longitude, Detector.ID, SppDets)
}
# Change the format of the date from Y-m-d to d-m-Y:
# B_data2$Night2 <- as.Date(as.character(B_data2$Night, tz = "Europe/London", "%d/%m/%Y"), "%Y-%m-%d")
#
# B_data2$Night2 <- format(as.Date(B_data2$Night, format = "%Y-%m-%d"), format = "%d/%m/%Y")
#
# B_data2$Night3 <- as.Date(B_data2$Night2, format = "%d/%m/%Y")
#
# glimpse(B_data2)
#
# # B_data2$Night2 <- format(B_data2$Night, format=c("%d-%m-%Y"))
# # B_data2$Night2 <- as.Date(B_data2$Night, format=c("%d-%m-%Y"))
# Create suntimes
# Use package `suncalcs` to make `sunset` and `sunrise` columns for each `Night` and the location (`Latitude` and `Longitude`) of the bat survey.
# Get number nights between first and last bat observation (plus 1 for dawn)
num_nights <- as.integer(difftime(max(B_data2$Night) ,
min(B_data2$Night) ,
units = c("days"))) + 1
# Make a date vector of nights between first and last bat observation.
nightlist <- seq.Date(from=min(B_data2$Night),
length.out = num_nights +1,
by='days')
# Get suntimes for date vector and Location (Latitude and Longitude)
setdata <- getSunlightTimes(date = nightlist,
lat = median(B_data2$Latitude, na.rm = T),
lon = median(B_data2$Longitude, na.rm = T),
tz = "Europe/London")
# Duplicate data.frame to make sunrise data
risedata <- setdata
# Select  sunset date and time
setdata <- setdata %>%
select(date, sunset) %>%
mutate(date = lubridate::as_date(date))
# Select  sunrise date and time
risedata <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date)) %>%
mutate(date = date - lubridate::days(1))
# Combine sunset and risedata by
sun_data <- dplyr::full_join(setdata, risedata, by="date")
# Rename date as Night
colnames(sun_data) <- c("Night", "sunset", "sunrise")
sun_data <- sun_data %>%
mutate(night_length_hr = as.numeric(difftime(sunrise, sunset, units='hours')),
night_length_min = as.numeric(difftime(sunrise, sunset, units='mins')))
# Join bat data with the sundata by Night
joined_data <- dplyr::left_join(B_data2, sun_data, by="Night")
#  ## Create Variables Relative to Suntimes and Bat Observation
#
#  Variables relative to suntimes and bat observation
#
# * `post_set_min` bat observation time minutes after sunset
#  * `pre_rise_min` bat observation time minutes before sunrise
#  * `post_set_hr` bat observation time hours after sunset
#  * `pre_rise_hr` bat observation time hours before sunrise
#  * `post_set_hr_int` bat observation time as an integer (hour) after sunset
#      + `-0.5` to `0.49` hours is `0` hour
#      + `0.5` to `1.49` hours is `1` hour
#      + `1.5` to `2.49` hours is `2` hour
#      + `2.5` to `3.49` hours is `3` hour ect...
#  * `pre_rise_hr_int` bat observation time as an integer (hour) before sunrise
#      + `-0.5` to `0.49` hours is `0` hour
#      + `0.5` to `1.49` hours is `1` hour
#      + `1.5` to `2.49` hours is `2` hour
#      + `2.5` to `3.49` hours is `3` hour ect...
#  * `night_length_hr`  length of the night in hours
# To make sure difference is in minutes/hours etc... use difftime
All_data <- joined_data %>%
mutate(post_set_min = as.numeric(difftime(DateTime, sunset, units='mins')),
pre_rise_min = as.numeric(difftime(sunrise, DateTime, units='mins')),
post_set_hr = as.numeric(difftime(DateTime, sunset, units='hours')),
pre_rise_hr = as.numeric(difftime(sunrise, DateTime, units='hours')),
post_set_hr_int = as.integer(round(post_set_hr, digits = 0)),
pre_rise_hr_int = as.integer(round(pre_rise_hr, digits = 0)))
#Russ(2012) Bat roost emergence times minutes after sunset
Species <- c("Barbastella barbastellus",
"Eptesicus serotinus",
"Myotis alcathoe",
"Myotis bechsteinii",
"Myotis brandtii",
"Myotis daubentonii",
"Myotis mystacinus",
"Myotis nattereri",
"Myotis spp.",
"Nyctalus leisleri",
"Nyctalus noctula",
"Nyctalus spp.",
"Pipistrellus nathusii",
"Pipistrellus pipistrellus",
"Pipistrellus pygmaeus",
"Pipistrellus spp.",
"Plecotus auritus",
"Plecotus austriacus",
"Rhinolophus ferrumequinum",
"Rhinolophus hipposideros")
lower <- c(25, 20, 30, 30, 30, 50, 30, 35, 30, 8, 5, 5, 18, 22, 22, 18, 40, 40, 35, 35)
upper <- c(60, 25, 35, 33, 35, 70, 35, 55, 70, 18, 9, 18, 28, 32, 28, 32, 60, 60, 48, 50)
russ <- tibble(Species, lower, upper)
#Join with Jon Russ data with bat observation data All_data
All_data <- dplyr::left_join(All_data, russ, by = "Species")
# create lists to be used for tables and graphs later:
# list of all of the unique locations in the dataset
Dets <- c(unique(All_data$Detector.ID))
# list of all of the different species in the dataset
Spp_list <- c(unique(All_data$Species))
# list of all of the unique species-location combinations
SpDet <- c(unique(All_data$SppDets))
# dataframe of survey days
Surv.days <- as.data.frame(unique(All_data$Night)) #all unique survey nights
Surv.days.N <- length(Surv.days$`unique(All_data$Night)`) #count of survey nights
Surv.days.M <- Surv.days %>%
mutate(Month = lubridate::month((unique(All_data$Night)), label = T)) %>%
count(Month) #count of survey days per month
Table <- All_data %>%
select(Night, sunset, sunrise) %>%
distinct() %>%
mutate(night_length = round(as.numeric(difftime(sunrise, sunset, units='hours')), digits = 1),
sunset = stringr::str_sub(as.character(sunset), 11, 16),
sunrise = stringr::str_sub(as.character(sunrise), 11, 16)) %>%
arrange(Night)
colnames(Table) <- c("Night (y-m-d)", "Sunset (hh:mm)", "Sunrise (hh:mm)", "Night Length (hours)")
knitr::kable(Table, align = "cccc")
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
plot <- Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Species)) +
facet_wrap(Detector.ID~.)
plot
for (i in seq_len(Locs)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Species)) +
facet_wrap_paginate(Detector.ID~., nrow=1, ncol=1, page=i))
}
#Join with Jon Russ data with bat observation data All_data
All_data <- dplyr::left_join(All_data, russ, by = "Species")
# create lists to be used for tables and graphs later:
# list of all of the unique locations in the dataset
Dets <- c(unique(All_data$Detector.ID))
# list of all of the different species in the dataset
Spp_list <- c(unique(All_data$Species))
# list of all of the unique species-location combinations
SpDet <- c(unique(All_data$SppDets))
# dataframe of survey days
Surv.days <- as.data.frame(unique(All_data$Night)) #all unique survey nights
Surv.days.N <- length(Surv.days$`unique(All_data$Night)`) #count of survey nights
Surv.days.M <- Surv.days %>%
mutate(Month = lubridate::month((unique(All_data$Night)), label = T)) %>%
count(Month) #count of survey days per month
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
for (i in seq_len(Dets)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Species)) +
facet_wrap_paginate(Detector.ID~., nrow=1, ncol=1, page=i))
}
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
for (i in seq_len(Dets)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Dets)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page=i))
}
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
for (i in seq_len(Dets)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page=i))
}
for (i in seq_len(Species)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page=i))
}
seq_len(Species)
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
for (i in seq_len(Spp_list)) {
print(Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page=i))
}
plot <- Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap(Species~.)
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
plot <- Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap(Species~.)
plot
Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=2, page = 6)
Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page = 6)
Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page = 4)
Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap_paginate(Species~., nrow=1, ncol=1, page = 6)
View(Night_month)
Night_month %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
facet_wrap(Species~.)
for (i in seq_along(Spp_list)) {
Night_month %>%
filter(Species = i)
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))
}
for (i in seq_along(Spp_list)) {
Night_month %>%
filter(Species == i)
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))
}
Night_month %>%
filter(Species == "Myotis spp.")
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))
Night_month %>%
filter(Species == "Myotis spp.") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))
for (i in seq_along(Spp_list)) {
Night_month %>%
filter(Species == "i") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))
}
Night_month <- All_data %>%
group_by(Species, Night, Month, Detector.ID) %>%
count()
for (i in seq_along(Spp_list)) {
print(Night_month %>%
filter(Species == "i") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)))
}
seq_along(Spp_list)
View(Surv.days)
seq_along(unique(All_data$Species))
for (i in Spp_list) {
print(Night_month %>%
filter(Species == "i") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)))
}
Spp_list
seq_along(Spp_list)
seq_len(Spp_list)
Spp_list
seq_along(c(Spp_list))
# list of all of the different species in the dataset
Spp_list <- unique(All_data$Species)
seq_along(Spp_list)
seq(Spp_list)
as.factor(Spp_list)
seq_along(Spp_list)
for (i in seq(Spp_list)) {
print(Night_month %>%
filter(Species == "i") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)))
}
test <- c("one", "two", "three")
test <- c("one", "two", "three")
seq_along(test)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#Libraries used
library(tidyverse) # Enables a consistent approach to data science
library(dplyr)
library(suncalc) # Suntimes
library(knitr)
library(lubridate)
library(ggplot2)
library(ggforce)
library(pander)
library(reshape2)
seq_along(test)
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == "i") %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))) +
ylab("Number of [i] passes")
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID))) +
ylab("Number of passes")
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of [i] passes"))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of" ,i, "passes"))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i) +
theme(plot.title = element_text(face = "italics")))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid")))
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(colour=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("Number of passes") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("/nNumber of passes per night") +
ggtitle(i/n) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("/nNumber of passes per night") +
xlab("Month\n") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("\nNumber of passes per night") +
xlab("Month\n") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("Number of passes per night\n") +
xlab("\nMonth") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")) +
theme_bw())
}
for (i in unique(All_data$Species)) {
print(Night_month %>%
filter(Species == i) %>%
ggplot(aes(Month, n)) +
geom_boxplot(aes(fill=Detector.ID)) +
ylab("Number of passes per night\n") +
xlab("\nMonth") +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic")))
}
Table <- All_data %>%
group_by(Species, Month, Detector.ID) %>%
count() %>%
spread(Month, n) %>%
rename("Detector ID" = Detector.ID)
# Make all NA's = 0
Table[is.na(Table)] <- 0
Table2 <- Table %>%
remove_rownames %>%
column_to_rownames(var="Species")
Table <- All_data %>%
group_by(Species, Month, Detector.ID) %>%
count() %>%
spread(Month, n) %>%
rename("Detector ID" = Detector.ID)
# Make all NA's = 0
Table[is.na(Table)] <- 0
# Table2 <- Table %>%
#   remove_rownames %>%
#   column_to_rownames(var="Species")
results='asis' #important to run this as it ensures the raw table output isn't processed further by knitr
panderOptions('table.split.table', 100)
pander(Table2, style = "rmarkdown")
Table <- All_data %>%
group_by(Species, Month, Detector.ID) %>%
count() %>%
spread(Month, n) %>%
rename("Detector ID" = Detector.ID)
# Make all NA's = 0
Table[is.na(Table)] <- 0
Table
Table <- All_data %>%
group_by(Species, Month, Detector.ID) %>%
count() %>%
spread(Month, n) %>%
rename("Detector ID" = Detector.ID)
# Make all NA's = 0
Table[is.na(Table)] <- 0
# Table2 <- Table %>%
#   remove_rownames %>%
#   column_to_rownames(var="Species")
results='asis' #important to run this as it ensures the raw table output isn't processed further by knitr
panderOptions('table.split.table', 100)
pander(Table, style = "rmarkdown")
# # for testing purposes - load in test data
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/GlenApp.csv")
#glimpse(B_data)
# # for testing purposes - load in test data
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/RiggedHill.csv")
#glimpse(B_data)
# # for testing purposes - load in test data
B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/WithinNight/Data/RiggedHill.csv")
#glimpse(B_data)
